* ~org-appear~

Make invisible parts of Org elements appear visible.

** About

[[https://orgmode.org/][Org mode]] provides a way to toggle visibility of emphasis markers, links, subscripts, and superscripts by customising variables such as ~org-hide-emphasis-markers~. However, it is currently not possible to do this interactively and on an element-by-element basis. Emphasis and verbatim marker toggling requires reloading the Org buffer; links and sub/superscripts are always toggled in the entire buffer. This package, inspired by [[https://github.com/io12/org-fragtog][org-fragtog]], enables automatic visibility toggling depending on cursor position. Hidden element parts appear when the cursor enters an element and disappear when it leaves.

[[file:demo.gif]]

** Installation

The easiest way to install ~org-appear~ is from MELPA, using your favourite package manager or ~package-install~. For Guix users, ~org-appear~ is also available in the official GNU Guix channel.

** Manual installation

With [[https://github.com/raxod502/straight.el][straight.el]], simply put the following line in ~init.el~:

#+begin_src emacs-lisp

  (straight-use-package '(org-appear :type git :host github :repo "awth13/org-appear"))

#+end_src

Alternatively, git clone this repository and point Emacs to it using the ~:load-path~ keyword of ~use-package~ or ~require~.

** Usage

The package can be enabled interactively or automatically on org-mode start-up:

#+begin_src emacs-lisp

  (add-hook 'org-mode-hook 'org-appear-mode)

#+end_src

Automatic toggling of elements may be enabled by setting ~org-appear-autoemphasis~, ~org-appear-autolinks~, ~org-appear-autosubmarkers~, and ~org-appear-autoentities~ custom variables to non-nil. By default, only ~org-appear-autoemphasis~ is enabled. If Org mode custom variables that control visibility of emphasis markers, links, or sub/superscripts are configured to show hidden parts, the respective ~org-appear~ settings do not have an effect.

** Known Issues

~org-appear~ does not handle overlapping emphasis elements correctly, e.g.,

#+begin_example
  *Why would someone /nest emphasis* like that?/
#+end_example

In the above example, ~org-appear~ can only detect and reveal the first (bold) element. This is due to the reliance on the ~org-element~ API -- ~org-element-context~ in particular -- which also fails to detect the second (italic) element.

Since the ~org-element~ API allows any number of spaces after an element, ~org-appear~ toggles the last element on the previous line if the current line is empty.
